#include <ESP8266WiFi.h>
#include <FirebaseESP8266.h>

// Define motor pins for Motor A
const int motor1Pin1 = D1; // IN1
const int motor1Pin2 = D2; // IN2

// Define motor pins for Motor B
const int motor2Pin1 = D3; // IN3
const int motor2Pin2 = D4; // IN4

// Define ultrasonic sensor pins
const int trigPin = D5;    // Trig pin
const int echoPin = D6;    // Echo pin

// Define maximum distance to detect an obstacle
const int maxDistance = 20; // Distance in centimeters

// Replace these with your WiFi credentials and Firebase project details
#define WIFI_SSID "your-SSID"
#define WIFI_PASSWORD "your-PASSWORD"
#define FIREBASE_HOST "your-project-id.firebaseio.com"
#define FIREBASE_AUTH "your-database-secret"

FirebaseData firebaseData;

void setup() {
  // Initialize the motor control pins as outputs
  pinMode(motor1Pin1, OUTPUT);
  pinMode(motor1Pin2, OUTPUT);
  pinMode(motor2Pin1, OUTPUT);
  pinMode(motor2Pin2, OUTPUT);
  
  // Initialize the ultrasonic sensor pins
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
  
  // Begin Serial communication
  Serial.begin(115200);

  // Connecting to WiFi
  WiFi.begin(WIFI_SSID, WIFI_PASSWORD);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("Connected to WiFi");

  // Connecting to Firebase
  Firebase.begin(FIREBASE_HOST, FIREBASE_AUTH);
  Firebase.reconnectWiFi(true);
}

void loop() {
  // Get distance from ultrasonic sensor
  long distance = getDistance();
  
  // Log distance to Firebase
  logFirebase(distance);

  // Check if the distance is less than the max distance
  if (distance < maxDistance) {
    // Stop the motors if an obstacle is detected
    stopMotors();
    Serial.println("Obstacle detected! Stopping motors.");
  } else {
    // Run the motors if no obstacle is detected
    runMotors();
    Serial.println("No obstacle detected. Running motors.");
  }
  
  // Wait before the next loop
  delay(100);
}

void runMotors() {
  // Run Motor 1 Forward
  digitalWrite(motor1Pin1, HIGH);
  digitalWrite(motor1Pin2, LOW);
  
  // Run Motor 2 Forward
  digitalWrite(motor2Pin1, HIGH);
  digitalWrite(motor2Pin2, LOW);
}

void stopMotors() {
  // Stop both motors
  digitalWrite(motor1Pin1, LOW);
  digitalWrite(motor1Pin2, LOW);
  digitalWrite(motor2Pin1, LOW);
  digitalWrite(motor2Pin2, LOW);
}

long getDistance() {
  // Send a short pulse to trigger the ultrasonic sensor
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);

  // Read the echo pin for the time it takes for the echo to return
  long duration = pulseIn(echoPin, HIGH);
  
  // Calculate the distance in centimeters
  long distance = (duration / 2) / 29.1;

  // Print the distance for debugging purposes
  Serial.print("Distance: ");
  Serial.println(distance);

  return distance;
}

void logFirebase(long distance) {
  String path = "/distance";
  if (Firebase.setInt(firebaseData, path, distance)) {
    Serial.println("Firebase push success");
  } else {
    Serial.println("Firebase push failed");
    Serial.println("REASON: " + firebaseData.errorReason());
  }
}
